{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 ArrayList<String> uniqueWords // Keeps track of \
LinkedHashMap<String, Integer> counts // counts the occurence of words\
\
have a loop that runs while (file.hasNextLine())\{\
replaceAll(\'93[//p\{Punct\}\'94,\'94\'94)\
use the splut function to blow it up into separate words \'97> parts array!\
	foreach part in the parts array\{\
	// for each word that has appeared on the line\
		See if its in \'93uniqueWords\'94 \'97> uniqueWords.contains(part) \'97> true or false\
		and if not, add it to uniqueWords and also ask counts to do this: counts.add(part,1)\
		if it was in uniqueWords: counts.put(part, counts.get(part)+1);\
	\}\
\}\
You have got a unique list of words and their occurence!\
\
\
\
NOT FROM KLUMP,\
COULD USE HASHSET????\
WORK OUT MAIN FRAMEWORK LATER}